# remap prefix to Control + a
unbind C-b
set -g prefix 'C-a'

# 256-color terminal
set-option -g default-terminal "xterm-256color"

# Add truecolor support (tmux info | grep Tc)
set-option -ga terminal-overrides ",xterm-256color:Tc"

# 0 is too far from ` ;)
set -g base-index 1
set -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# Automatically set window title
# set-window-option -g automatic-rename on
# set-option -g set-titles on

# don't rename windows automatically
set-option -g allow-rename off

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

# set -g mouse on
setw -g mode-keys vi
setw -g monitor-activity on

bind-key c new-window -c '#{pane_current_path}'

# split panes using \ and -
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

bind-key -n M-j resize-pane -D
bind-key -n M-k resize-pane -U
bind-key -n M-h resize-pane -L
bind-key -n M-l resize-pane -R

bind-key -n M-Down resize-pane -D
bind-key -n M-Up resize-pane -U
bind-key -n M-Left resize-pane -L
bind-key -n M-Right resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Shift-vim  to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection \;\
		run "tmux show-buffer | xsel -b -i"
bind-key P run "xsel -b -o | tmux load-buffer -" \; paste-buffer

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message "reloaded"

# -------------------------------------------------------------------
# # Decoration (256-color)
# # -------------------------------------------------------------------
set-option -g status-justify left
set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #S #[bg=colour236] '
set-option -g status-left-length 16
set-option -g status-bg colour237
set-option -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set-option -g status-interval 60

set-option -g pane-active-border-fg colour240
set-option -g pane-border-fg colour238

set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '


# -------------------------------------------------------------------
# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# # -------------------------------------------------------------------
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# set-window-option -g window-style 'bg=colour238'
# set-window-option -g window-active-style 'bg=colour237'

# #状态栏
# # 颜色
# set -g status-bg black
# set -g status-fg white
#
# # 对齐方式
# set-option -g status-justify centre
#
# # 左下角
# set-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'
# set-option -g status-left-length 20
#
# # 窗口列表
# setw -g automatic-rename on
# set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
# set-window-option -g window-status-current-format '#[bg=black,fg=yellow]#I#[fg=yellow]:#[fg=yellow]#W#[fg=dim]'
#
# # 右下角
# set -g status-right '#[fg=green][#[fg=cyan]%Y-%m-%d#[fg=green]]'
